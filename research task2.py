import gym
import h5py
import numpy as np
"""
This function stores to a file the frame generated by the openai-gym environment specified with env
env : environment
episodes : Number of games to store. A game is completed when the environment return's done as true in env.step
policy : This should be a function that takes as input the frame and outputs an action. For a random policy the input is not 
used but should be declared nonetheless
filename: Name of the filename where is going to be stored the data
colorM	
"""
def gatherData(env, episodes, policy, filename, colorMode = 'gray'):

	f = filename

	for episode in range(episodes):
		env.reset()	

		episodeNumber = f.create_group("episode" + str(episode))
		iterations = episodeNumber.create_dataset("iteration" + str(episode), (episodes, ), maxshape = (None, ))
		images = episodeNumber.create_dataset("image" + str(episode), (episodes, 4), maxshape = (None, 4))
		rewards = episodeNumber.create_dataset("reward" + str(episode), (episodes, ), maxshape = (None, ))
		finished = episodeNumber.create_dataset("finished" + str(episode), (episodes, ), maxshape = (None, ), dtype = bool)
		i = 0

		while (True):
			env.render()

			randomAction = env.action_space.sample()
			observation, reward, done, info = env.step(randomAction)
			iterations[i] = i
			images[i] = observation
			rewards[i] = reward
			finished[i] = done

			i = i + 1
			#Resizes the datasets if iterations are past the capacity
			for dataset in episodeNumber.values(): 
				if ((dataset.len()) <= i):
					if (dataset.shape == (dataset.len(), 4)):
						dataset.resize((dataset.len()*2, 4))
					else:
						dataset.resize((dataset.len()*2,))

			#Resets if done
			if (done):
				i = 0
				break	

"""
Add code for reading back the data from an specific episode and even visualize at random a small subset of the images. 
Create a function for reading the data and another for testing and visualizing the data. 
The test can be just to print on screen data size as you already have for the data storage part but from the loaded data. 
Basically create a function that loads the data into memory and another to visualize specified number of random frames 
and the size of the datasets. 
"""
def readData(filename, episode):


######################
##TESTS
######################
def testGatherData():
	testEnv = gym.make('CartPole-v0')
	episodes = 5
	dummyPolicy = ""
	testFile = h5py.File("test.hdf5", "w")
	gatherData(testEnv, episodes, dummyPolicy, testFile, 'gray')
	for val in testFile.values():
		print(val.name)
		for dset in val.values():
			print(dset.name)
			for i in range(len(dset)):
				print dset[i],
			print("")
		print("")

def testReadData():
	#Tests

def testAll():
	testGatherData()
	testReadData()

if (__name__ == "__main__"):
	testAll()


